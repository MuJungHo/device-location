{"version":3,"sources":["components/Layer.js","components/Board.js","components/ControlPanel.js","components/Header.js","Editor.js","contexts/GlobalContext.js","App.js","index.js"],"names":["layer","boardRef","setLayers","layers","setActiveLayerID","activeLayerID","setImportJson","importJson","board","React","useState","start","setStart","useEffect","JSON","stringify","current","addEventListener","drag","endDrag","startDrag","e","stopPropagation","left","clientX","top","clientY","removeEventListener","updatedLayer","_layers","map","id","_importJson","name","localStorage","setItem","handleUpdateLayer","x","y","onFocus","style","outline","tabIndex","onMouseDown","xlinkHref","width","height","searchDevice","useRef","undefined","xmlns","version","ref","image","fill","filter","Device","indexOf","Layer","key","BasicProperties","activeLayer","devices","setDevices","options","value","Fragment","display","marginBottom","TextField","label","type","variant","onChange","Number","target","marginLeft","FormControl","fullWidth","InputLabel","Select","displayEmpty","option","MenuItem","Name","Panel","Button","color","onClick","_devices","push","BoardProperties","margin","Math","floor","find","backgroundColor","padding","Object","keys","length","setFloors","setActiveFloor","setSearchDevice","activeFloor","anchorEl","setAnchorEl","inputPngRef","inputXlsxRef","open","setOpen","handleClose","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","Image","src","result","onerror","err","handleUploadPNG","a","_floors","files","i","split","_temp","workbookToBlob","workbook","wbout","xlsx","write","bookType","bookSST","Blob","s","buf","ArrayBuffer","view","Uint8Array","charCodeAt","s2ab","alignItems","paddingLeft","flex","accept","multiple","data","read","sheetName","SheetNames","worksheet","Sheets","deviceArray","Floor","handleDeviceRawData","utils","sheet_to_json","readAsArrayBuffer","InputProps","startAdornment","InputAdornment","position","size","justifyContent","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","Boolean","onClose","click","wb","book_new","sheetData","forEach","item","sheet","aoa_to_sheet","book_append_sheet","workbookBlob","URL","createObjectURL","aLink","document","createElement","href","download","Dialog","maxWidth","aria-labelledby","aria-describedby","DialogTitle","DialogActions","clear","autoFocus","dropRef","getItem","parse","floors","floorIndex","setValue","addLayer","setAddLayer","searchFloor","setSearchFloor","greaterThanZero","num","_floor","DialogContent","_addLayer","device","disabled","Header","Tabs","indicatorColor","textColor","scrollButtons","newValue","Tab","marginRight","scrollTop","offsetTop","scrollLeft","offsetLeft","overflow","Board","ControlPanel","GlobalContext","createContext","GlobalProvider","props","device_list","allDevices","setAllDevices","window","innerWidth","innerHeight","setFloor","getDevicesByFloor","floorname","getLayersByFloor","updateLayersByFloor","console","log","Provider","App","Editor","render","getElementById"],"mappings":"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","file":"static/js/main.a83ed899.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\n\nexport default ({\n  layer,\n  boardRef,\n  setLayers,\n  layers,\n  setActiveLayerID,\n  activeLayerID,\n  setImportJson,\n  importJson,\n  board\n}) => {\n  const [start, setStart] = React.useState(null)\n\n  React.useEffect(() => {\n    if (JSON.stringify(start) !== JSON.stringify({}) && start !== null) {\n      boardRef.current.addEventListener('mousemove', drag)\n      boardRef.current.addEventListener('mouseup', endDrag)\n    }\n  }, [start])\n  const handleUpdateLayer = updatedLayer => {\n    let _layers = layers.map(layer => {\n      if (layer.id === updatedLayer.id) return { ...updatedLayer }\n      else return { ...layer }\n    })\n    setLayers(_layers)\n    let _importJson = { ...importJson }\n    _importJson[board.name] = _importJson[board.name].map(layer => {\n      if (layer.id === updatedLayer.id) {\n        // console.log(layer.id, updatedLayer)\n        return { ...updatedLayer }\n      }\n      else return { ...layer }\n    })\n    setImportJson(_importJson)\n    localStorage.setItem(\"importJson\", JSON.stringify(_importJson))\n  }\n  const startDrag = e => {\n    e.stopPropagation()\n    setStart({ left: e.clientX, top: e.clientY })\n  }\n  const endDrag = () => {\n    setStart({})\n    boardRef.current.removeEventListener('mousemove', drag)\n  }\n  const drag = e => {\n    e.stopPropagation()\n    handleUpdateLayer({\n      ...layer,\n      \"Location X\": layer[\"Location X\"] + e.x - start.left,\n      \"Location Y\": layer[\"Location Y\"] + e.y - start.top\n    })\n  }\n  // console.log(activeLayerID)\n  return (\n    <g\n      onFocus={() => setActiveLayerID(layer.id)}\n      style={{ outline: 'none' }}\n      tabIndex=\"-1\"\n      onMouseDown={startDrag}\n    >\n      <image\n        xlinkHref={activeLayerID === layer.id ? './assets/images/location-blue.svg' : './assets/images/location.svg'}\n        x={layer[\"Location X\"] - 10}\n        y={layer[\"Location Y\"] - 20}\n        width={20}\n        height={20}\n        onMouseDown={startDrag}\n      />\n    </g>\n  )\n}","import React from 'react'\nimport Layer from './Layer'\nexport default ({\n  layers,\n  setLayers,\n  activeLayerID,\n  setActiveLayerID,\n  board,\n  setImportJson,\n  importJson,\n  searchDevice\n}) => {\n  const boardRef = React.useRef()\n  if (board === undefined) return null\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\"\n      version=\"1.1\"\n      width={board.width}\n      height={board.height}\n      ref={boardRef}\n    >\n      {\n        board.image === \"\"\n          ?\n          <rect\n            width={board.width}\n            height={board.height} x=\"0\" y=\"0\" fill='#f5f5f5'\n          />\n          :\n\n          <image\n            xlinkHref={board.image}\n            height={board.height}\n            width={board.width}\n            x=\"0\"\n            y=\"0\"\n          />\n      }\n      {\n        layers\n          .filter(layer => layer.Device.indexOf(searchDevice) > -1)\n          .map(layer =>\n            <Layer\n              activeLayerID={activeLayerID}\n              setActiveLayerID={setActiveLayerID}\n              key={layer.id}\n              layer={layer}\n              layers={layers}\n              setLayers={setLayers}\n              boardRef={boardRef}\n              importJson={importJson}\n              setImportJson={setImportJson}\n              board={board}\n            />)\n      }\n    </svg>\n  )\n}","import React from 'react'\nimport {\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Button\n} from '@material-ui/core'\n\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n\nconst BasicProperties = ({\n  activeLayer,\n  devices,\n  setLayers,\n  setActiveLayerID,\n  setDevices,\n  layers,\n  importJson,\n  setImportJson,\n  board\n}) => {\n  // console.log(devices, activeLayer)\n  var options = [{ ...activeLayer }, ...devices]\n\n  const handleDeleteLayer = () => {\n    let _layers = layers.filter(layer => layer.id !== activeLayer.id)\n    setLayers(_layers)\n\n    let _devices = [...devices]\n    _devices.push({ ...activeLayer, [\"Location X\"]: \"\", [\"Location Y\"]: \"\" })\n\n    setDevices(_devices)\n    setActiveLayerID()\n    let _importJson = { ...importJson }\n    _importJson[board.name] = [..._layers, ..._devices]\n    setImportJson(_importJson)\n    localStorage.setItem(\"importJson\", JSON.stringify(_importJson))\n  }\n\n  const handleUpdateLayer = (key, value) => {\n    let _layers = layers.map(layer => {\n      return layer.id === activeLayer.id\n        ? { ...layer, [key]: value }\n        : { ...layer }\n    })\n    setLayers(_layers)\n\n    let _importJson = { ...importJson }\n    _importJson[board.name] = [..._layers, ...devices]\n    setImportJson(_importJson)\n    localStorage.setItem(\"importJson\", JSON.stringify(_importJson))\n  }\n\n  return (\n    <React.Fragment>\n      <div style={{ display: 'flex', marginBottom: 20 }}>\n        <TextField\n          label=\"Location X\"\n          type=\"number\"\n          variant=\"outlined\"\n          onChange={e => handleUpdateLayer(\"Location X\", Number(e.target.value))}\n          value={activeLayer[\"Location X\"] || \"\"}\n        />\n        <TextField\n          label=\"Location Y\"\n          type=\"number\"\n          variant=\"outlined\"\n          onChange={e => handleUpdateLayer(\"Location Y\", Number(e.target.value))}\n          style={{ marginLeft: 20 }}\n          value={activeLayer[\"Location Y\"] || \"\"}\n        />\n      </div>\n\n      <FormControl style={{ marginBottom: 20 }} variant=\"outlined\" fullWidth>\n        <InputLabel>Device</InputLabel>\n        <Select\n          value={activeLayer.Device}\n          label=\"Device\"\n          displayEmpty\n        >\n          {\n            options.map(option => <MenuItem\n              key={option.Device}\n              value={option.Device}>\n              {option.Device}\n            </MenuItem>)\n          }\n        </Select>\n      </FormControl>\n      <h3 style={{ marginBottom: 20 }}>Name: {activeLayer.Name}</h3>\n      <h3 style={{ marginBottom: 20 }}>Panel: {activeLayer.Panel}</h3>\n      <Button color=\"primary\" variant=\"outlined\" onClick={handleDeleteLayer}>刪除</Button>\n    </React.Fragment>\n  )\n}\nconst BoardProperties = ({ board }) => {\n  if (board === undefined) return null\n  return (\n    <div>\n      <h3 style={{ margin: '16px 0' }}>{`Width: ${Math.floor(board.width)}`}</h3>\n      <h3 style={{ margin: '16px 0' }}>{`Height: ${Math.floor(board.height)}`}</h3>\n    </div>\n  )\n}\nexport default ({\n  layers,\n  setLayers,\n  activeLayerID,\n  board,\n  devices,\n  setActiveLayerID,\n  setDevices,\n  importJson,\n  setImportJson\n}) => {\n  const activeLayer = layers.find(layer => layer.id === activeLayerID) || null\n  // console.log(board)\n  return (\n    <div style={{\n      width: 380,\n      height: 'calc(100vh - 80px)',\n      backgroundColor: '#f1f3f7',\n      padding: 20\n    }}>\n      {\n        Object.keys(board).length > 0 ?\n          <React.Fragment>\n            <h2 style={{ marginBottom: 20 }}>{`Name: ${board.name}`}</h2>\n            <h2 style={{ marginBottom: 20 }}>{`Devices: ${layers.length}/${devices.length + layers.length}`}</h2>\n            {\n              activeLayerID\n                ? <BasicProperties\n                  devices={devices}\n                  layers={layers}\n                  setLayers={setLayers}\n                  activeLayer={activeLayer}\n                  setActiveLayerID={setActiveLayerID}\n                  setDevices={setDevices}\n                  importJson={importJson}\n                  setImportJson={setImportJson}\n                  board={board}\n                />\n                : <BoardProperties board={board} />\n            }\n          </React.Fragment>\n          : <h4><ArrowUpwardIcon />請上傳樓層與設備</h4>\n      }\n    </div>\n  )\n}","import React from 'react'\nimport {\n  IconButton,\n  Button,\n  Menu,\n  MenuItem,\n  TextField,\n  InputAdornment\n} from '@material-ui/core'\nimport xlsx from 'xlsx'\nimport SearchIcon from '@material-ui/icons/Search';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport PublishIcon from '@material-ui/icons/Publish';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default ({\n  setFloors,\n  setActiveFloor,\n  setLayers,\n  setDevices,\n  setImportJson,\n  searchDevice,\n  setSearchDevice,\n  importJson,\n  activeFloor\n}) => {\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const inputPngRef = React.useRef(null);\n  const inputXlsxRef = React.useRef(null);\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const getBase64 = (file) =>\n    new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        var image = new Image();\n\n        image.src = reader.result;\n\n        image.onload = function () {\n          resolve({ image: reader.result, width: image.width, height: image.height })\n        };\n      };\n\n      reader.onerror = (err) => reject(err);\n    });\n\n  const handleUploadPNG = async e => {\n    var _floors = []\n    if (e.target.files) {\n      const { files } = e.target;\n      for (let i = 0; i < files.length; i++) {\n        let floor = {}\n        const { image, width, height } = await getBase64(files[i])\n        floor.image = image\n        floor.width = width\n        floor.height = height\n        floor.name = files[i]?.name.split(\".png\")[0] || \"\"\n        // console.log(files[i])\n        _floors.push(floor)\n      }\n      setFloors(_floors)\n      setActiveFloor(_floors[0])\n      let _temp = importJson[_floors[0].name] || []\n      let _layers = []\n      let _devices = []\n      for (let i = 0; i < _temp.length; i++) {\n        if (_temp[i][\"Location X\"] && _temp[i][\"Location Y\"]) {\n          _layers.push({\n            ..._temp[i],\n          })\n        } else {\n          _devices.push(_temp[i])\n        }\n      }\n      setDevices(_devices)\n      setLayers(_layers)\n    }\n    inputPngRef.current.value = null\n  }\n\n  const handleClearStorage = () => {\n    setFloors([])\n    setActiveFloor({})\n    setDevices([])\n    setLayers([])\n    setImportJson({})\n    localStorage.clear()\n    setOpen(false)\n  }\n\n  const handleExportXLSX = () => {\n    // console.log(importJson)\n    const wb = xlsx.utils.book_new();\n\n    let sheetData = [[\n      \"Panel\",\n      \"SLC\",\n      \"Device\",\n      \"Floor\",\n      \"Name\",\n      \"Type ID\",\n      \"Gateway ID\",\n      \"Function Code\",\n      \"Address\",\n      \"Location X\",\n      \"Location Y\",\n      \"Group IDs\"\n    ]]\n    Object.keys(importJson).forEach(key => {\n      // console.log()\n      importJson[key].forEach(item => {\n        sheetData.push([\n          item[\"Panel\"],\n          item[\"SLC\"],\n          item[\"Device\"],\n          item[\"Floor\"],\n          item[\"Type ID\"],\n          item[\"Gateway ID\"],\n          item[\"Function Code\"],\n          item[\"Address\"],\n          item[\"Location X\"],\n          item[\"Location Y\"],\n          item[\"Group IDs\"],\n        ])\n      })\n    })\n    // return\n    let sheet = xlsx.utils.aoa_to_sheet(sheetData)\n    xlsx.utils.book_append_sheet(wb, sheet, 'Device')\n    let workbookBlob = workbookToBlob(wb)\n\n    if (typeof workbookBlob == \"object\" && workbookBlob instanceof Blob) {\n      workbookBlob = URL.createObjectURL(workbookBlob); // 創建blob地址\n    }\n\n    var aLink = document.createElement(\"a\");\n    aLink.href = workbookBlob;\n    aLink.download = \"config.xlsx\";\n    aLink.click()\n  }\n\n  const workbookToBlob = workbook => {\n    var wopts = {\n      bookType: \"xlsx\",\n      bookSST: false,\n      type: \"binary\"\n    };\n    var wbout = xlsx.write(workbook, wopts);\n    function s2ab(s) {\n      var buf = new ArrayBuffer(s.length);\n      var view = new Uint8Array(buf);\n      for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xff;\n      return buf;\n    }\n    var blob = new Blob([s2ab(wbout)], {\n      type: \"application/octet-stream\"\n    });\n    return blob;\n  }\n\n  const handleDeviceRawData = (deviceArray) => {\n    let _importJson = {}\n    for (let i = 0; i < deviceArray.length; i++) {\n      if (_importJson[deviceArray[i].Floor] === undefined) {\n        _importJson[deviceArray[i].Floor] = []\n      }\n      _importJson[deviceArray[i].Floor].push({ ...deviceArray[i], id: deviceArray[i].Device + \"_\" + i })\n    }\n\n    setImportJson(_importJson)\n    localStorage.setItem(\"importJson\", JSON.stringify(_importJson))\n\n    let _temp = _importJson[activeFloor.name] || []\n    let _layers = []\n    let _devices = []\n    for (let i = 0; i < _temp.length; i++) {\n      if (_temp[i][\"Location X\"] && _temp[i][\"Location Y\"]) {\n        _layers.push({\n          ..._temp[i],\n        })\n      } else {\n        _devices.push(_temp[i])\n      }\n    }\n    setDevices(_devices)\n    setLayers(_layers)\n  }\n\n  const handleUploadXLSX = e => {\n    if (e.target.files) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const data = e.target.result;\n        const workbook = xlsx.read(data, { type: \"array\" });\n        const sheetName = workbook.SheetNames[3];\n        const worksheet = workbook.Sheets[sheetName];\n        const json = xlsx.utils.sheet_to_json(worksheet);\n        handleDeviceRawData(json);\n      };\n      reader.readAsArrayBuffer(e.target.files[0]);\n    }\n  }\n  return (\n    <div style={{\n      height: 80,\n      backgroundColor: '#f1f3f7',\n      display: 'flex',\n      alignItems: 'center',\n      paddingLeft: 20\n    }}>\n      <h1>FAIMIS</h1>\n      <div style={{ flex: 1 }}></div>\n      <input\n        accept=\"image/png\"\n        style={{ display: 'none' }}\n        ref={inputPngRef}\n        multiple\n        onChange={handleUploadPNG}\n        type=\"file\"\n      />\n      <input\n        accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n        style={{ display: 'none' }}\n        ref={inputXlsxRef}\n        // multiple\n        onChange={handleUploadXLSX}\n        type=\"file\"\n      />\n      <TextField\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SearchIcon />\n            </InputAdornment>\n          ),\n        }}\n        variant='outlined'\n        size=\"small\" label=\"搜尋設備\" value={searchDevice} onChange={e => setSearchDevice(e.target.value)} />\n\n      <div style={{ flex: 1 }}></div>\n      <div style={{ width: 340, display: 'flex', justifyContent: 'space-around' }}>\n        <Button color=\"primary\" variant=\"contained\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n          <PublishIcon />\n          上傳\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          <MenuItem onClick={() => {\n            inputPngRef.current.click()\n            handleClose()\n          }}>樓層</MenuItem>\n          <MenuItem onClick={() => {\n            inputXlsxRef.current.click()\n            handleClose()\n          }}>設備</MenuItem>\n        </Menu>\n        <Button color=\"primary\" variant=\"contained\" onClick={handleExportXLSX}>\n          <GetAppIcon />\n          下載\n        </Button>\n        <Button color=\"secondary\" variant=\"contained\" onClick={() => setOpen(true)}>\n          <ClearIcon />\n          清除\n        </Button>\n      </div>\n\n      <Dialog\n        open={open}\n        fullWidth\n        maxWidth=\"sm\"\n        onClose={() => setOpen(false)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"確認清除資料？\"}</DialogTitle>\n\n        <DialogActions>\n          <Button onClick={() => setOpen(false)}>\n            Disagree\n          </Button>\n          <Button variant=\"contained\" onClick={handleClearStorage} color=\"secondary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* <IconButton style={{ marginRight: 10 }} onClick={exportJsonFile}><CloudDownloadIcon /></IconButton> */}\n    </div>\n  )\n}","import React from \"react\";\nimport Board from './components/Board'\nimport ControlPanel from './components/ControlPanel'\nimport Header from './components/Header'\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\n\nimport {\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem\n} from '@material-ui/core'\n\nexport default () => {\n  const dropRef = React.useRef()\n  const [importJson, setImportJson] = React.useState(localStorage.getItem(\"importJson\") ? JSON.parse(localStorage.getItem(\"importJson\")) : {})\n  const [layers, setLayers] = React.useState([])\n  const [activeLayerID, setActiveLayerID] = React.useState()\n  const [activeFloor, setActiveFloor] = React.useState({})\n  const [devices, setDevices] = React.useState([])\n  const [floors, setFloors] = React.useState([])\n  const [floorIndex, setValue] = React.useState(0);\n  const [open, setOpen] = React.useState(false);\n  const [addLayer, setAddLayer] = React.useState({})\n  const [searchFloor, setSearchFloor] = React.useState(\"\")\n  const [searchDevice, setSearchDevice] = React.useState(\"\")\n\n  const handleChange = (event, newValue) => {\n    setActiveFloor(floors[newValue])\n    setValue(newValue);\n    let _temp = importJson[floors[newValue].name] || []\n    let _layers = []\n    let _devices = []\n    for (let i = 0; i < _temp.length; i++) {\n      if (_temp[i][\"Location X\"] && _temp[i][\"Location Y\"]) {\n        _layers.push({\n          ..._temp[i],\n        })\n      } else {\n        _devices.push(_temp[i])\n      }\n    }\n    setDevices(_devices)\n    setLayers(_layers)\n    setActiveLayerID()\n  };\n  const handleClick = e => {\n    // return console.log('click')\n    setActiveLayerID()\n\n    if (devices.length === 0) return\n\n    setOpen(true)\n    // console.log(dropRef.current.scrollLeft)\n    setAddLayer({\n      \"Location Y\": greaterThanZero(e.clientY + dropRef.current.scrollTop - dropRef.current.offsetTop - 80 - 10),\n      \"Location X\": greaterThanZero(e.clientX + dropRef.current.scrollLeft - dropRef.current.offsetLeft - 10),\n      Device: \"\"\n    })\n  };\n  const greaterThanZero = num => num < 0 ? 0 : num\n\n  const handleAddLayer = () => {\n    let _devices = [...devices]\n    _devices = _devices.filter(device => device.Device !== addLayer.Device)\n    setDevices(_devices)\n    setLayers([...layers, {\n      ...addLayer,\n    }])\n    setActiveLayerID(addLayer.id)\n    let _importJson = { ...importJson }\n    _importJson[activeFloor.name] = [...layers, {\n      ...addLayer,\n    }]\n    // console.log()\n    setImportJson(_importJson)\n    localStorage.setItem(\"importJson\", JSON.stringify(_importJson))\n    setOpen(false)\n  }\n  // console.log(_devices)\n  React.useEffect(() => {\n    if (floors.length === 0) return\n    let _floor = floors.filter(floor => floor.name.indexOf(searchFloor) > -1)\n    if (_floor.length > 0) {\n      setActiveFloor(_floor[0])\n      setValue(0);\n      let _temp = importJson[_floor[0].name] || []\n      let _layers = []\n      let _devices = []\n      for (let i = 0; i < _temp.length; i++) {\n        if (_temp[i][\"Location X\"] && _temp[i][\"Location Y\"]) {\n          _layers.push({\n            ..._temp[i],\n          })\n        } else {\n          _devices.push(_temp[i])\n        }\n      }\n      setDevices(_devices)\n      setLayers(_layers)\n      setActiveLayerID()\n    }\n\n  }, [searchFloor])\n  const handleChangeSearchFloor = e => {\n    setSearchFloor(e.target.value)\n  }\n\n  const handleChangeDevice = e => {\n    const _addLayer = devices.find(device => device.Device === e.target.value)\n    setAddLayer({\n      ..._addLayer,\n      Device: e.target.value,\n      \"Location Y\": addLayer[\"Location Y\"],\n      \"Location X\": addLayer[\"Location X\"],\n    })\n  }\n  return (\n    <div style={{\n      width: '100%',\n      height: '100vh',\n      backgroundColor: 'white'\n    }}>\n\n      <Dialog\n        open={open}\n        onClose={() => setOpen(false)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Add Device\"}</DialogTitle>\n        <DialogContent>\n          <React.Fragment>\n            <div style={{ display: 'flex', marginBottom: 20 }}>\n              <TextField\n                label=\"Location X\"\n                type=\"text\"\n                variant=\"outlined\"\n                value={addLayer[\"Location X\"] || \"\"}\n              />\n              <TextField\n                label=\"Location Y\"\n                type=\"text\"\n                variant=\"outlined\"\n                style={{ marginLeft: 20 }}\n                value={addLayer[\"Location Y\"] || \"\"}\n              />\n            </div>\n            <FormControl variant=\"outlined\" fullWidth>\n              <InputLabel>Device *</InputLabel>\n              <Select\n                value={addLayer.Device}\n                label=\"Device\"\n                displayEmpty\n                onChange={handleChangeDevice}\n              >\n                {\n                  devices.map(option => <MenuItem\n                    key={option.id}\n                    value={option.Device}>\n                    {option.Device}\n                  </MenuItem>)\n                }\n              </Select>\n            </FormControl>\n          </React.Fragment>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpen(false)} color=\"primary\">\n            Disagree\n          </Button>\n          <Button disabled={addLayer.Device === \"\"} variant=\"contained\" onClick={handleAddLayer} color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Header\n        setFloors={setFloors}\n        setActiveFloor={setActiveFloor}\n        setLayers={setLayers}\n        setDevices={setDevices}\n        setImportJson={setImportJson}\n        searchDevice={searchDevice}\n        setSearchDevice={setSearchDevice}\n        activeFloor={activeFloor}\n        importJson={importJson}\n      />\n      <div\n        style={{\n          width: '100%',\n          position: 'relative',\n          display: 'flex',\n        }}>\n        <div >\n          <div style={{ display: 'flex', height: 56, alignItems: 'center' }}>\n            <Tabs\n              style={{ width: 'calc(100vw - 500px)' }}\n              value={floorIndex}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              variant=\"scrollable\"\n              scrollButtons=\"on\"\n              onChange={handleChange}\n            >\n              {\n                floors\n                  .filter(floor => floor.name.indexOf(searchFloor) > -1)\n                  .map(floor => <Tab key={floor.name} label={floor.name} />)\n              }\n            </Tabs>\n            < TextField\n              style={{ marginRight: 16, }}\n              label=\"搜尋樓層\" size=\"small\" variant=\"outlined\" value={searchFloor}\n              onChange={handleChangeSearchFloor} />\n          </div>\n          <div\n            ref={dropRef}\n            onMouseDown={handleClick}\n            style={{\n              width: 'calc(100vw - 360px)',\n              overflow: 'scroll',\n              height: 'calc(100vh - 150px)',\n              backgroundColor: 'rgba(0, 0, 0, 0.3)',\n              marginLeft: 16,\n              marginRight: 16,\n            }}\n          >\n            <Board\n              board={activeFloor}\n              layers={layers}\n              setLayers={setLayers}\n              activeLayerID={activeLayerID}\n              setActiveLayerID={setActiveLayerID}\n              importJson={importJson}\n              setImportJson={setImportJson}\n              searchDevice={searchDevice}\n            />\n          </div>\n        </div>\n        <ControlPanel\n          board={activeFloor}\n          layers={layers}\n          setLayers={setLayers}\n          activeLayerID={activeLayerID}\n          setActiveLayerID={setActiveLayerID}\n          devices={devices}\n          setDevices={setDevices}\n          importJson={importJson}\n          setImportJson={setImportJson}\n        />\n      </div>\n    </div>\n  )\n}","import React, { createContext, useState } from \"react\";\nimport device_list from \"../device_list.json\";\n\nconst GlobalContext = createContext();\n\nfunction GlobalProvider(props) {\n  const [devices, setDevices] = useState([]);\n  const [allDevices, setAllDevices] = useState(device_list);\n  const [floor, setFloor] = useState({\n    width: window.innerWidth - 340,\n    height: window.innerHeight - 160,\n    name: \"Floor 1\",\n    image: \"\"\n  })\n\n  const getDevicesByFloor = (floorname) => {\n    let _temp = allDevices[floorname];\n    let _devices = [];\n    for (let i = 0; i < _temp.length; i++) {\n      if (_temp[i][\"Location X\"] && _temp[i][\"Location Y\"]) {\n        // do nothing\n      } else {\n        _devices.push(_temp[i])\n      }\n    }\n    return _devices\n  }\n\n  const getLayersByFloor = (floorname) => {\n    let _temp = allDevices[floorname];\n    let _layers = [];\n    for (let i = 0; i < _temp.length; i++) {\n      if (_temp[i][\"Location X\"] && _temp[i][\"Location Y\"]) {\n        _layers.push({\n          ..._temp[i],\n          id: _temp[i].Device + \"_\" + i,\n          left: _temp[i][\"Location X\"],\n          top: _temp[i][\"Location Y\"],\n        })\n      }\n    }\n    return _layers\n  }\n\n  const updateDevicesByFloor = (floorname, devices) => {\n\n  }\n\n  const updateLayersByFloor = (layers) => {\n    let _temp = JSON.parse(JSON.stringify(allDevices))\n    let _devices = getDevicesByFloor(floor.name);\n    let _layers = [...layers];\n    _temp[floor.name] = [..._layers, ..._devices]\n    console.log(_temp)\n    setAllDevices(_temp)\n  }\n\n  const value = {\n    getDevicesByFloor,\n    getLayersByFloor,\n    updateLayersByFloor,\n    setFloor,\n    floor\n  };\n\n  return <GlobalContext.Provider value={value} {...props} />;\n}\n\nexport { GlobalContext, GlobalProvider };","import React from 'react'\nimport Editor from \"./Editor\"\nimport { GlobalProvider } from \"./contexts/GlobalContext\"\nimport \"./style/normalize.css\"\n\nconst App = () => (\n  <GlobalProvider>\n    <Editor />\n  </GlobalProvider>\n)\n\nexport default App\n","import 'react-app-polyfill/ie11'\nimport React from 'react'\nimport { render } from 'react-dom'\nimport App from './App'\n\nrender(<App />,document.getElementById('root'))\n"],"sourceRoot":""}